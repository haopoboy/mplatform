# This workflow will build a Java project with Maven on PR
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI and CD
on:
  pull_request:
    branches: [ master, dev ]
  push:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      - name: Run the verify phase
        run: ./mvnw -B verify
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          path: target
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: target
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      - name: Start deployment
        uses: bobheadxi/deployments@master
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ github.event.number || github.ref }}
          ref: ${{ github.head_ref || github.ref }}
          
      # PR
      - name: Deploy to DockerHub
        if: github.head_ref
        run: >
          ./mvnw -B com.google.cloud.tools:jib-maven-plugin:2.0.0:build
          -Dimage=haopoboy/mplatform
          -Dtags=pr-${{ github.event.number }}
          -Dusername=${{ secrets.DOCKER_USERNAME }}
          -Dpassword=${{ secrets.DOCKER_PASSWORD }}
      - name: Update deployment status
        uses: bobheadxi/deployments@master
        if: always() && github.head_ref
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://hub.docker.com/repository/docker/haopoboy/mplatform/tags?name=pr-${{github.event.number}}
          
      # Push 
      - name: Update deployment status
        uses: bobheadxi/deployments@master
        if: always() && !github.head_ref
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://hub.docker.com/repository/docker/haopoboy/mplatform/
